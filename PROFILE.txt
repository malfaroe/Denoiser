Objective: implement an audio file denoiser
Operation: using an noised audio file as an input, the system will
output a cleaned/denoised audio file
Techniques: VAE with convolutional layers
Data for training: tbd
Implementation time:tbd
Stages:
1. Review of related projects, final design and objectives refinement/precision
------https://github.com/vbelz/Speech-enhancement

Otro: https://github.com/sthalles/cnn_denoiser
https://sthalles.github.io/practical-deep-learning-audio-denoising/


2. General design and stages outline
3. Methods and general script
4. Coding, implementation and static fire testing
5. Model Training
6. Testing
7. Operation/production



#####RANDOM NOISE UNIT
Issues:
- Librosa takes too long to load (does it happen in mac also?)
- Low quality of reconstructed files---> SOLVED
- Code must be refactored and renamed

###RECONSTRUCION TESTING UNIT ---DONE
- Take one file and convert to spec DONE
- Separate into magnitud and phase DONE
- reconstruct the file DONE
- test reconstrucion quality DONE
- Once completed: incorporate to random noise unit DONE


####NEXT STAGE: DATA ENGIN

Implementation of a data engine station for producing 
blended audio files (sound+noises)
Stage1: Blend one sound with one noise: First learn and im'lement code for this
Stage 2: Blend one sound with multiple noises

Preparatory stage:
- Cleaning and refactoring code
- Install vscode on mac station

